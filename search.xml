<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[李弘毅ML课程作业一：PM2.5的预测]]></title>
    <url>%2F2020%2F03%2F18%2FML_HW1%2F</url>
    <content type="text"><![CDATA[1. 作业描述​ 给定了训练集train.csv，要求用前9小时的数据预测出第十个小时的PM2.5的值。这是linear regression的作业。 2. Feature Selection​ train.csv中每个小时给出了18个特征，其实有些特征与PM2.5关系不大。首先画一下相关矩阵热力图来观察一下。 123456789101112131415161718192021222324import numpy as npimport pandas as pddata=pd.read_csv('train.csv')data.drop(['a','b'],axis=1,inplace=True)column=data['c'].unique()data_new=pd.DataFrame(np.zeros([24*240,18]),columns=column)for i in column: aa=data[data['c']==i] aa.drop(['c'],axis=1,inplace=True) aa=np.array(aa) aa[aa=='NR']='0' aa=aa.astype('float32') aa=aa.reshape(1,5760) aa=aa.T data_new[i]=aalabel=np.array(data_new['PM2.5'][9:],dtype='float32')import matplotlib.pyplot as pltimport seaborn as sns# Draw a heatmap with the numeric values in each cellf, ax = plt.subplots(figsize=(9, 6))sns.heatmap(abs(data_new.corr()), fmt="d", linewidths=.5, ax=ax, cmap='Blues')f.savefig('heatmap.png') ​ 这里不关心是负相关还是正相关，所以对相关矩阵取了绝对值。画出来的结果是这样的： 对于PM2.5来说，相关性比较高的有NO2, NO1, NOx, SO2, THC, PM10等特征。 ​ 也可以把每个特征与PM2.5的关系绘制一下。可以观察到部分特征与PM2.5的值关系不大。 3. Data Preprocessing​ 这里用了作业demo给出的方法。把前9个小时的全部18个特征都作为预测第十小时PM2.5的特征。也就是说，(9*18+1) 个输入特征（加上bias）对应一个输出。输入进行了归一化。 1234567891011121314151617181920212223242526272829data = pd.read_csv('../train.csv', encoding='big5')data = data.iloc[:, 3:]data[data == 'NR'] = 0raw_data = data.to_numpy()month_data = &#123;&#125;for month in range(12): sample = np.empty([18, 480]) for day in range(20): sample[:, day*24:(day+1)*24] = raw_data[18*(20*month+day):18*(20*month+day+1)] month_data[month] = samplex = np.empty([12*471, 18*9], dtype=float) # training datay = np.empty([12*471, 1], dtype=float) # training setfor month in range(12): for day in range(20): for hour in range(24): if day == 19 and hour &gt; 14: continue x[month*471+day*24+hour, :] = month_data[month][:, day*24+hour:day*24+hour+9].reshape(1,-1) y[month*471+day*24+hour, 0] = month_data[month][9, day*24+hour+9] #value# Normalizationmean_x = np.mean(x, axis=0)std_x = np.std(x, axis=0)for i in range(len(x)): for j in range(len(x[0])): if std_x[j] != 0: x[i][j] = (x[i][j] - mean_x[j]) / std_x[j] ​ 处理完后，张量x就是输入（前9小时的所有特征），y就是输出（第十小时PM2.5值）。 4. 用不同的学习率训练1234567891011121314151617181920212223242526# trainingdim = 18*9 + 1w = np.ones([dim, 1])x = np.concatenate((np.ones([12*471, 1]), x), axis = 1).astype(float)learning_rate = 100iter_time = 1000adagrad = np.zeros([dim, 1])eps = 1e-10training_loss = []for t in range(iter_time): loss = np.sqrt(np.sum(np.power(np.dot(x, w) - y, 2))/471/12) # rmse training_loss.append(loss) if t % 100 == 0: print(str(t)+":"+str(loss)) gradient = 2 * np.dot(x.transpose(), np.dot(x, w) - y) # dim*1 adagrad += gradient ** 2 w = w - learning_rate * gradient / np.sqrt(adagrad + eps)np.save('weight.npy', w)# Save loss datafileObject = open('lr_loss_'+str(learning_rate)+'.txt', 'w')for ip in training_loss: fileObject.write(str(ip)) fileObject.write('\n')fileObject.close() 在相同的参数下，分别用0.1，10，100，1000的学习率训练，看一下收敛的效果。学习率为0.1时收敛非常慢，学习率太大（如1000）时又无法收敛到最小值。 李弘毅老师ML课程主页 correlation matrix heatmap reference]]></content>
      <tags>
        <tag>machine learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我们的故事]]></title>
    <url>%2F2019%2F09%2F27%2F%E6%88%91%E4%BB%AC%E7%9A%84%E6%95%85%E4%BA%8B%2F</url>
    <content type="text"><![CDATA[1他突然说要来看樱花的时候，我真的以为他是来看花的。 虽然在同一座城市，但是我们的联系实在少的可怜。我时常忘记，在这个离家近一千公里的地方，还有一个同乡的存在。直到他说，4年了，总该来你的学校看一次樱花🌸。当他提出要我当导游的时候，我心里是万般不乐意的。多年的内向性格令我无比抗拒和不熟悉的人往来。但是他说作为报酬，会请我吃饭。于是我应邀了。 看花的那天人很多。他见到我，第一句话是：“我们多久没见了？”是的，自从大一见了两三次之后，我们这几年都没见过。虽然我们的学校只隔了一条街。那天我很拘束，后来慢慢聊开了，问了他一些我后来觉得很蠢的问题。我注意到他和大多数看花人不一样，他并没有对🌸表现出很大的兴趣。只是那时我以为，🌸不够美，不足以吸引他。 2后来我们的来往突然多了起来。我去看他的篮球赛，我们去看电影看夜景。再到后来，他突然牵我的手，我慌慌张张挣脱，才明白过来，他没把我当兄弟。那段时间我经历了生活和学习上的一些挫败，对于他表现出来的心意考虑了很多。犹豫了很多天之后，在他第三次尝试牵手的时候，我没有再挣脱。 只是我没想过，所有我以为的偶然，从来都不是偶然。 高考放榜之后偶然问起他的去向，惊讶发现我们将要去往同一座城市。 某年生日零点收到他的红包，我惊喜于他竟然记得我的生日。 后来他说，“我喜欢你的时间，要比你想象中长很多。” 3故事是他后来告诉我的。 某天我问他，“我很好奇你是什么时候开始对我有想法的？” ”如果是说那种朦胧的感情，我很早就有了。3月份见到你，发现你还是我想象中的样子，所以确定了内心的想法。” 他说，在很早很早的时候，他对我就有很模糊朦胧的感情。大概是初中某年我找他爬山的时候？他说，“我还记得你当时的样子，留着短发，很可爱。” 他说，后来他选择脱离大环境，到另一个地方读高中，却会偶尔想起我。 他说，大二的某个夜晚，他心里很郁闷，夜里出来走走，不觉间走到我的学校。明明想叫我出来，却又害怕突然的打扰，最后只是随便寒暄了几句。 他说，大学怂了四年，终于迈出一步，以看花为借口靠近我，然后约我看电影，然后尝试着牵手，在被拒绝之后心情很低落。但还是鼓起勇气试了许多次。 他还说，去年看到我说要去北京，他就疯狂联系北京的学校，只是因为种种原因未成行。 “从我的学校到你的学校这一步，我走了四年。很庆幸，终于走到了。” 4他听着李宗盛的《鬼迷心窍》，一步一步向我走来。后知后觉的我，庆幸着自己是这个十年故事的女主角。最近听JJ的新歌，感觉有一句歌词很适合总结这篇文章：“这故事开始一个人，我认真写成了我们”。 谢谢你的等待，谢谢你的认真。未来有你，于我幸甚。 ​]]></content>
      <tags>
        <tag>personal stuff</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F09%2F27%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
